package paragraph

// IMPORTANT: This file was auto-generated by goenum.exe and should not be modified directly.
// Any changes made to this file will be overwritten the next time goenum.exe is run.
// This file was generated based on the original description file located at ./goenum/BoxStyle.goenum.
// The template used to generate this file can be found at ./goenum/goenum.template.
// To make changes to the enumeration, please update the original description file and re-run goenum.exe.
// The source code for goenum can be found here https://github.com/tpfeiffer67/goenum

import (
	"errors"
	"strings"
)

type BoxStyle int

const (
	BoxStyleCount     = 21
	BoxStyleMaxIndex  = int(BoxStyleFantasy4)
	BoxStyleLastValue = BoxStyleFantasy4
)

const (
	BoxStyleNone BoxStyle = iota
	BoxStyleSpaceChar
	BoxStyleSingleLine
	BoxStyleSingleLineRounded
	BoxStyleBold
	BoxStyleSingleVDoubleH
	BoxStyleSingleHDoubleV
	BoxStyleDoubleLine
	BoxStyleExtraBold
	BoxStyleExtraBoldRounded
	BoxStyleMaxBold
	BoxStyleBlocksLightShade
	BoxStyleBlocksMediumShade
	BoxStyleBlocksDarkShade
	BoxStyleBlocks
	BoxStyleDots
	BoxStyleDiamonds
	BoxStyleFantasy1
	BoxStyleFantasy2
	BoxStyleFantasy3
	BoxStyleFantasy4
)

func (v BoxStyle) String() string {
	return [...]string{
		"BoxStyleNone",
		"BoxStyleSpaceChar",
		"BoxStyleSingleLine",
		"BoxStyleSingleLineRounded",
		"BoxStyleBold",
		"BoxStyleSingleVDoubleH",
		"BoxStyleSingleHDoubleV",
		"BoxStyleDoubleLine",
		"BoxStyleExtraBold",
		"BoxStyleExtraBoldRounded",
		"BoxStyleMaxBold",
		"BoxStyleBlocksLightShade",
		"BoxStyleBlocksMediumShade",
		"BoxStyleBlocksDarkShade",
		"BoxStyleBlocks",
		"BoxStyleDots",
		"BoxStyleDiamonds",
		"BoxStyleFantasy1",
		"BoxStyleFantasy2",
		"BoxStyleFantasy3",
		"BoxStyleFantasy4",
	}[v]
}

func BoxStyleFromString(s string) (BoxStyle, error) {
	var suffix string
	if strings.HasPrefix(s, "BoxStyle") {
		l := len("BoxStyle")
		if l < len(s) {
			suffix = s[l:]
		}
	} else {
		suffix = s
	}
	switch suffix {
	case "None":
		return BoxStyleNone, nil
	case "SpaceChar":
		return BoxStyleSpaceChar, nil
	case "SingleLine":
		return BoxStyleSingleLine, nil
	case "SingleLineRounded":
		return BoxStyleSingleLineRounded, nil
	case "Bold":
		return BoxStyleBold, nil
	case "SingleVDoubleH":
		return BoxStyleSingleVDoubleH, nil
	case "SingleHDoubleV":
		return BoxStyleSingleHDoubleV, nil
	case "DoubleLine":
		return BoxStyleDoubleLine, nil
	case "ExtraBold":
		return BoxStyleExtraBold, nil
	case "ExtraBoldRounded":
		return BoxStyleExtraBoldRounded, nil
	case "MaxBold":
		return BoxStyleMaxBold, nil
	case "BlocksLightShade":
		return BoxStyleBlocksLightShade, nil
	case "BlocksMediumShade":
		return BoxStyleBlocksMediumShade, nil
	case "BlocksDarkShade":
		return BoxStyleBlocksDarkShade, nil
	case "Blocks":
		return BoxStyleBlocks, nil
	case "Dots":
		return BoxStyleDots, nil
	case "Diamonds":
		return BoxStyleDiamonds, nil
	case "Fantasy1":
		return BoxStyleFantasy1, nil
	case "Fantasy2":
		return BoxStyleFantasy2, nil
	case "Fantasy3":
		return BoxStyleFantasy3, nil
	case "Fantasy4":
		return BoxStyleFantasy4, nil
	}
	return BoxStyle(0), errors.New("String does not correspond to any existing BoxStyle values")
}
