package paragraph

// IMPORTANT: This file was auto-generated by goenum.exe and should not be modified directly.
// Any changes made to this file will be overwritten the next time goenum.exe is run.
// This file was generated based on the original description file located at ./goenum/LabelAlign.goenum.
// The template used to generate this file can be found at ./goenum/goenum.template.
// To make changes to the enumeration, please update the original description file and re-run goenum.exe.
// The source code for goenum can be found here https://github.com/tpfeiffer67/goenum

import (
	"errors"
	"strings"
)

type LabelAlign int

const (
	LabelAlignCount     = 3
	LabelAlignMaxIndex  = int(LabelAlignRight)
	LabelAlignLastValue = LabelAlignRight
)

const (
	LabelAlignLeft LabelAlign = iota
	LabelAlignCenter
	LabelAlignRight
)

func (v LabelAlign) String() string {
	return [...]string{
		"LabelAlignLeft",
		"LabelAlignCenter",
		"LabelAlignRight",
	}[v]
}

func LabelAlignFromString(s string) (LabelAlign, error) {
	var suffix string
	if strings.HasPrefix(s, "LabelAlign") {
		l := len("LabelAlign")
		if l < len(s) {
			suffix = s[l:]
		}
	} else {
		suffix = s
	}
	switch suffix {
	case "Left":
		return LabelAlignLeft, nil
	case "Center":
		return LabelAlignCenter, nil
	case "Right":
		return LabelAlignRight, nil
	}
	return LabelAlign(0), errors.New("String does not correspond to any existing LabelAlign values")
}
